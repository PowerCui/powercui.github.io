<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-05-02T17:05:26+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">My page title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2023/05/02/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2023-05-02T04:55:34+08:00</published><updated>2023-05-02T04:55:34+08:00</updated><id>http://localhost:4000/jekyll/update/2023/05/02/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2023/05/02/welcome-to-jekyll.html"><![CDATA[<p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>Jekyll requires blog post files to be named according to the following format:</p>

<p><code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.MARKUP</code></p>

<p>Where <code class="language-plaintext highlighter-rouge">YEAR</code> is a four-digit number, <code class="language-plaintext highlighter-rouge">MONTH</code> and <code class="language-plaintext highlighter-rouge">DAY</code> are both two-digit numbers, and <code class="language-plaintext highlighter-rouge">MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.]]></summary></entry><entry><title type="html">学习清单</title><link href="http://localhost:4000/2023/05/02/alist.html" rel="alternate" type="text/html" title="学习清单" /><published>2023-05-02T00:00:00+08:00</published><updated>2023-05-02T00:00:00+08:00</updated><id>http://localhost:4000/2023/05/02/alist</id><content type="html" xml:base="http://localhost:4000/2023/05/02/alist.html"><![CDATA[<h2 id="当学习-vue-时以下是一些建议">当学习 Vue 时，以下是一些建议</h2>

<ul>
  <li>
    <p>先学习 Vue 的基础知识：在开始深入学习 Vue 之前，建议先掌握 HTML、CSS 和 JavaScript 等基础知识。Vue 是一个基于 JavaScript 的框架，因此 avaScript 编程知识对于 Vue 的学习至关重要。</p>
  </li>
  <li>
    <p>学习 Vue 的组件化开发:Vue 的主要特点之一是组件化开发。在学习 Vue 时，建议深入了解组件化开发的概念和原理，掌握组件的编写和使用方法。</p>
  </li>
  <li>
    <p>实践是学习的关键：学习 Vue 最好的方法是通过实践。可以尝试编写简单的 Vue 应用程序，并与其他开发者交流和分享你的经验。</p>
  </li>
  <li>
    <p>掌握 Vue 的路由和状态管理:Vue 的状态管理工具是 Vuex，而路由管理工具是 Vue Router。建议学习并掌握这两个工具的使用方法。</p>
  </li>
  <li>
    <p>阅读 Vue 的官方文档:Vue 的官方文档是学习 Vue 的最佳资源之一。建议仔细阅读官方文档，并在实践中应用所学知识。</p>
  </li>
  <li>
    <p>参与 Vue 社区:Vue 社区是一个非常活跃的社区，有许多开发者在使用和贡献 Vue。可以参与 Vue 社区，与其他开发者交流和分享你的经验和知识。</p>
  </li>
</ul>

<p>希望这些建议能够帮助你学习 Vue。祝你学习愉快！</p>

<h2 id="对于javascript的学习有什么建议">对于JavaScript的学习有什么建议</h2>

<p>当学习 JavaScript 时，以下是一些建议:</p>

<ul>
  <li>
    <p>掌握 JavaScript 的基础知识：在学习 JavaScript 之前，建议先掌握 HTML、CSS 和 CSS 等基础知识。</p>
  </li>
  <li>
    <p>JavaScript 是一个用于创建交互式网页的脚本语言，因此对于网页开发的学习具有重要的推动作用。</p>
  </li>
  <li>
    <p>学习 JavaScript 的 DOM 操作:DOM 是 JavaScript 操作网页的主要对象。学习 DOM 操作可以帮助你更好地掌握 JavaScript，并使用它来创建交互式网页。</p>
  </li>
  <li>
    <p>学习 JavaScript 的事件处理：事件处理是 JavaScript 中非常重要的一个方面。通过学习事件处理，你可以轻松地处理用户交互，例如点击、滚动、拖拽等。</p>
  </li>
  <li>
    <p>实践是学习的关键：学习 JavaScript 最好的方法是通过实践。可以尝试编写简单的 JavaScript 脚本，并与其他开发者交流和分享你的经验。</p>
  </li>
  <li>
    <p>阅读 JavaScript 的官方文档:JavaScript 的官方文档是学习 JavaScript 的最佳资源之一。建议仔细阅读官方文档，并在实践中应用所学知识。</p>
  </li>
  <li>
    <p>参与 JavaScript 社区:JavaScript 社区是一个非常活跃的社区，有许多开发者在使用和贡献 JavaScript。可以参与 JavaScript 社区，与其他开发者交流和分享你的经验和知识。</p>
  </li>
</ul>

<p>希望这些建议能够帮助你学习 JavaScript。祝你学习愉快！</p>

<h2 id="学习-html建议">学习 HTML建议</h2>

<p>以下是一些学习 HTML 的建议:</p>

<ul>
  <li>
    <p>掌握 HTML 的基础知识：在学习 HTML 之前，建议先了解 HTML 的基本概念和语法，例如标签、属性、元素等。</p>
  </li>
  <li>
    <p>学习 HTML 的表单开发:HTML 表单是网站开发中最常用的表单之一。学习 HTML 表单开发可以帮助你创建有用的表单元素，例如文本框、下拉框、提交按钮等。</p>
  </li>
  <li>
    <p>掌握 HTML 的样式和布局:HTML 是一种用于创建网页的标记语言，而 CSS 是用于样式和布局的语言。学习 HTML 的样式和布局可以帮助你更好地创建美观和高效的网页。</p>
  </li>
  <li>
    <p>实践是学习的关键：学习 HTML 最好的方法是通过实践。可以尝试编写简单的 HTML 页面，并与其他开发者交流和分享你的经验。</p>
  </li>
  <li>
    <p>阅读 HTML 的官方文档:HTML 的官方文档是学习 HTML 的最佳资源之一。建议仔细阅读官方文档，并在实践中应用所学知识。</p>
  </li>
  <li>
    <p>参与 HTML 社区:HTML 社区是一个非常活跃的社区，有许多开发者在使用和贡献 HTML。可以参与 HTML 社区，与其他开发者交流和分享你的经验和知识。</p>
  </li>
</ul>

<p>希望这些建议能够帮助你学习 HTML。祝你学习愉快！</p>

<h2 id="学习css的建议">学习CSS的建议</h2>

<p>以下是一些学习 CSS 的建议:</p>

<ul>
  <li>
    <p>掌握 CSS 的基础知识：在学习 CSS 之前，建议先了解 CSS 的基本概念和语法，例如选择器、属性、值等。</p>
  </li>
  <li>
    <p>学习 CSS 的样式和布局:CSS 是用于样式和布局的语言。学习 CSS 的样式和布局可以帮助你更好地创建美观和高效的网页。</p>
  </li>
  <li>
    <p>实践是学习的关键：学习 CSS 最好的方法是通过实践。可以尝试编写简单的 CSS 样式，并与其他开发者交流和分享你的经验。</p>
  </li>
  <li>
    <p>阅读 CSS 的官方文档:CSS 的官方文档是学习 CSS 的最佳资源之一。建议仔细阅读官方文档，并在实践中应用所学知识。</p>
  </li>
  <li>
    <p>参与 CSS 社区:CSS 社区是一个非常活跃的社区，有许多开发者在使用和贡献 CSS。可以参与 CSS 社区，与其他开发者交流和分享你的经验和知识。</p>
  </li>
  <li>
    <p>学习 CSS 的高级特性:CSS 的高级特性包括响应式布局、动画、伪类等。学习 CSS 的高级特性可以帮助你更好地应对复杂的网页开发需求。</p>
  </li>
</ul>

<p>希望这些建议能够帮助你学习 CSS。祝你学习愉快！</p>

<h2 id="学习java-spring-boot-建议">学习Java spring boot 建议</h2>

<p>以下是一些学习 Java Spring Boot 的建议:</p>

<ul>
  <li>
    <p>掌握 Java 基础知识：在学习 Spring Boot 之前，建议先掌握 Java 的基础知识，例如数据类型、控制流语句、数组、类和对象等。</p>
  </li>
  <li>
    <p>学习 Spring Boot 的基础知识：了解 Spring Boot 的基本概念和语法，例如启动器、应用程序配置、依赖注入、Spring MVC 等。</p>
  </li>
  <li>
    <p>实践是学习的关键：学习 Spring Boot 最好的方法是通过实践。可以尝试编写简单的 Spring Boot 应用程序，并与其他开发者交流和分享你的经验。</p>
  </li>
  <li>
    <p>阅读 Spring Boot 的官方文档:Spring Boot 的官方文档是学习 Spring Boot 的最佳资源之一。建议仔细阅读官方文档，并在实践中应用所学知识。</p>
  </li>
  <li>
    <p>参与 Spring Boot 社区:Spring Boot 社区是一个非常活跃的社区，有许多开发者在使用和贡献 Spring Boot。可以参与 Spring Boot 社区，与其他开发者交流和分享你的经验和知识。</p>
  </li>
  <li>
    <p>学习 Spring Boot 的高级特性:Spring Boot 提供了许多高级特性，例如 Spring Cloud、Spring Data JPA、Spring Boot Actuator 等。学习 Spring Boot 的高级特性可以帮助你更好地应对复杂的应用程序开发需求。</p>
  </li>
</ul>

<p>希望这些建议能够帮助你学习 Java Spring Boot。祝你学习愉快！</p>

<h2 id="学习java的建议">学习Java的建议</h2>

<p>以下是一些学习 Java 的建议:</p>

<ul>
  <li>
    <p>掌握 Java 基础知识：在学习 Java 之前，建议先掌握 Java 的基础知识，例如数据类型、控制流语句、数组、类和对象等。</p>
  </li>
  <li>
    <p>学习 Java 的语法和面向对象编程：了解 Java 的语法和面向对象编程思想，例如封装、继承、多态等。</p>
  </li>
  <li>
    <p>实践是学习的关键：学习 Java 最好的方法是通过实践。可以尝试编写简单的 Java 程序，并与其他开发者交流和分享你的经验。</p>
  </li>
  <li>
    <p>阅读 Java 的官方文档:Java 的官方文档是学习 Java 的最佳资源之一。建议仔细阅读官方文档，并在实践中应用所学知识。</p>
  </li>
  <li>
    <p>参与 Java 社区:Java 社区是一个非常活跃的社区，有许多开发者在使用和贡献 Java。可以参与 Java 社区，与其他开发者交流和分享你的经验和知识。</p>
  </li>
  <li>
    <p>学习 Java 的高级特性:Java 提供了许多高级特性，例如反射、泛型、Lambda 表达式等。学习 Java 的高级特性可以帮助你更好地应对复杂的应用程序开发需求。</p>
  </li>
</ul>

<p>希望这些建议能够帮助你学习 Java。祝你学习愉快！</p>]]></content><author><name></name></author><category term="tagetest2" /><summary type="html"><![CDATA[当学习 Vue 时，以下是一些建议]]></summary></entry><entry><title type="html">Liquid 标签学习</title><link href="http://localhost:4000/2023/02/02/Liquid%E6%A0%87%E7%AD%BE.html" rel="alternate" type="text/html" title="Liquid 标签学习" /><published>2023-02-02T00:00:00+08:00</published><updated>2023-02-02T00:00:00+08:00</updated><id>http://localhost:4000/2023/02/02/Liquid%E6%A0%87%E7%AD%BE</id><content type="html" xml:base="http://localhost:4000/2023/02/02/Liquid%E6%A0%87%E7%AD%BE.html"><![CDATA[<h2 id="代码段高亮显示">代码段高亮显示</h2>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">foo</span>
  <span class="nb">puts</span> <span class="s1">'foo'</span>
<span class="k">end</span></code></pre></figure>

<h2 id="行号">行号</h2>

<p>highlightcalled的第二个参数是linenos可选的。包含该linenos参数将强制突出显示的代码包含行号。例如，以下代码块将在每行旁边包含行号：</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="code"><pre><span class="k">def</span> <span class="nf">foo</span>
  <span class="nb">puts</span> <span class="s1">'foo'</span>
<span class="k">end</span>
</pre></td></tr></tbody></table></code></pre></figure>

<h2 id="标记特定行440">标记特定行4.4.0</h2>

<p>您可以使用可选参数标记代码片段中的特定行mark_lines。此参数采用空格分隔的行号列表，必须用双引号引起来。例如，以下代码块将标记第 1 行和第 2 行，但不会标记第 3 行：</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">foo</span>
  <span class="nb">puts</span> <span class="s1">'foo'</span>
  <span class="n">line3</span>
  <span class="n">line4</span>
<span class="k">end</span></code></pre></figure>

<h2 id="包括图像和资源固定链接">包括图像和资源固定链接</h2>

<p>在某些时候，您会希望在文本内容中包含图像、下载或其他数字资产。一种常见的解决方案是在项目目录的根目录中创建一个文件夹，名称类似于assets，其中放置任何图像、文件或其他资源。然后，在任何帖子中，它们都可以链接到使用站点的根目录作为要包含的资产的路径。执行此操作的最佳方法取决于您站点的（子）域和路径的配置方式，但以下是 Markdown 中的一些简单示例：</p>

<p>在帖子中包含图像资产：</p>

<pre><code class="language-show">... which is shown in the screenshot below:
![My helpful screenshot](/assets/screenshot.jpg)
</code></pre>
<p><img src="/assets/threebody.jpg" alt="image" /></p>

<p>链接到 PDF 供读者下载：</p>

<pre><code class="language-eg">... you can [get the PDF](/assets/mydoc.pdf) directly.
</code></pre>

<h2 id="显示帖子索引">显示帖子索引</h2>

<p>多亏了Liquid及其标签，在另一个页面上创建帖子索引应该很容易 。这是一个简单的示例，说明如何创建指向您的博客文章的链接列表：</p>

<ul>
  
    <li>
      <a href="/jekyll/update/2023/05/02/welcome-to-jekyll.html">Welcome to Jekyll!</a>
    </li>
  
    <li>
      <a href="/2023/05/02/alist.html">学习清单</a>
    </li>
  
    <li>
      <a href="/2023/02/02/Liquid%E6%A0%87%E7%AD%BE.html">Liquid 标签学习</a>
    </li>
  
</ul>

<p>您可以完全控制如何（以及在​​何处）显示您的帖子，以及如何构建您的网站。如果你想了解更多，你应该阅读更多关于模板如何与 Jekyll 一起工作的内容。</p>

<p>请注意，该post变量仅存在于for上面的循环中。for如果您希望访问当前呈现的页面/帖子的变量（其中包含循环的帖子/页面的变量），请改用该page 变量。</p>

<h2 id="标签和类别">标签和类别</h2>

<p>Jekyll 对博客文章中的标签和类别提供一流的支持。</p>

<h2 id="标签">标签</h2>

<p>tag帖子的标签在帖子的前面使用单个条目或tags多个条目的键定义 。
由于 Jekyll 期望多个项目映射到 key tags， 如果它包含空格，它会自动拆分一个字符串条目。例如，虽然 front matter tag: classic hollywood将被处理成一个单一的实体 “classic hollywood”，但 front mattertags: classic hollywood将被处理成一个条目数组[“classic”, “hollywood”]。</p>

<p>无论选择的前键如何，Jekyll 都会存储映射到公开给 Liquid 模板的复数键的元数据。</p>

<p>当前站点中注册的所有标签都通过 公开给 Liquid 模板 site.tags。在页面上迭代site.tags将产生另一个包含两个项目的数组，其中第一个项目是标签的名称，第二个项目是具有 该标签的帖子数组。</p>

<h3>tagtest1</h3>
<ul>
    
      <li><a href="/2023/02/02/Liquid%E6%A0%87%E7%AD%BE.html">Liquid 标签学习</a></li>
    
  </ul>

<h3>tagetest2</h3>
<ul>
    
      <li><a href="/2023/05/02/alist.html">学习清单</a></li>
    
  </ul>

<h2 id="类别">类别</h2>

<p>类似于上述标签的帖子作品类别：</p>

<p>category它们可以使用键或 categories（遵循与标签相同的逻辑）通过前端定义
站点中注册的所有类别都暴露给 Liquid 模板，通过 site.categories这些模板可以迭代（类似于上面的标签循环）。
然而，类别和标签之间的相似性到此为止。</p>

<p>与标签不同，帖子的类别也可以由帖子的文件路径定义。上面的任何目录都_posts将作为类别读入。例如，如果帖子位于 path movies/horror/_posts/2019-05-21-bride-of-chucky.markdown，则movies和horror将自动注册为该帖子的类别。</p>

<p>当帖子也有 front matter 定义类别时，如果它们不存在，它们只会被添加到现有列表中。</p>

<p>类别和标签之间的标志性区别在于帖子的类别可以合并到为帖子生成的 URL中，而标签不能。</p>

<p>因此，根据前面内容是否有category: classic hollywood, 或categories: classic hollywood，上面的示例帖子的 URL 将分别为 either movies/horror/classic%20hollywood/2019/05/21/bride-of-chucky.html或 movies/horror/classic/hollywood/2019/05/21/bride-of-chucky.html。</p>

<h2 id="帖子摘录">帖子摘录</h2>

<p>excerpt您可以通过在帖子上使用变量来访问帖子内容的片段。默认情况下，这是帖子中的第一段内容，但是可以通过excerpt_separator在 front matter 或 中设置变量 来自定义它_config.yml。</p>

<pre><code class="language-excerpt">---
excerpt_separator: &lt;!--more--&gt;
---

Excerpt with multiple paragraphs

Here's another paragraph in the excerpt.
&lt;!--more--&gt;
Out-of-excerpt
</code></pre>

<p>下面是输出带有摘录的博客文章列表的示例：</p>

<ul>
  
    <li>
      <a href="/jekyll/update/2023/05/02/welcome-to-jekyll.html">Welcome to Jekyll!</a>
      <p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

    </li>
  
    <li>
      <a href="/2023/05/02/alist.html">学习清单</a>
      <h2 id="当学习-vue-时以下是一些建议">当学习 Vue 时，以下是一些建议</h2>

    </li>
  
    <li>
      <a href="/2023/02/02/Liquid%E6%A0%87%E7%AD%BE.html">Liquid 标签学习</a>
      <h2 id="代码段高亮显示">代码段高亮显示</h2>

    </li>
  
</ul>

<h2 id="草稿">草稿</h2>

<p>草稿是文件名中没有日期的帖子。它们是您仍在处理但还不想发布的帖子。要启动并运行草稿，请_drafts在您站点的根目录中创建一个文件夹并创建您的第一个草稿：</p>

<p>.
├── _drafts
│   └── a-draft-post.md
…</p>

<p>要使用草稿预览您的站点，请运行jekyll serve或jekyll build 使用–drafts开关。每个人都将被分配草稿文件的值修改时间作为其日期，因此您将看到当前编辑的草稿作为最新帖子。</p>]]></content><author><name></name></author><category term="tagtest1" /><summary type="html"><![CDATA[代码段高亮显示]]></summary></entry></feed>